/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  MatchResults,
} from '@stencil/router';


export namespace Components {

  interface AppHome {}
  interface AppHomeAttributes extends StencilHTMLAttributes {}

  interface AppProfile {
    'match': MatchResults;
  }
  interface AppProfileAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface I18nextProvider {
    'defaultNS'?: string;
    'fallbackLng'?: string;
    'i18n': Promise<Function>;
    'lng'?: string;
    'ns'?: string | string[];
  }
  interface I18nextProviderAttributes extends StencilHTMLAttributes {
    'defaultNS'?: string;
    'fallbackLng'?: string;
    'i18n'?: Promise<Function>;
    'lng'?: string;
    'ns'?: string | string[];
  }

  interface I18nextTrans {
    'defaultText': string;
    'key': string;
    'lng': string;
    'values': object;
  }
  interface I18nextTransAttributes extends StencilHTMLAttributes {
    'defaultText'?: string;
    'key'?: string;
    'lng'?: string;
    'values'?: object;
  }

  interface InputSignature {
    'value': string;
  }
  interface InputSignatureAttributes extends StencilHTMLAttributes {
    'onChange'?: (event: CustomEvent) => void;
    'onClear'?: (event: CustomEvent) => void;
    'value'?: string;
  }

  interface MyComponent {
    'a': number;
    'b': number;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    'a'?: number;
    'b'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppHome': Components.AppHome;
    'AppProfile': Components.AppProfile;
    'AppRoot': Components.AppRoot;
    'I18nextProvider': Components.I18nextProvider;
    'I18nextTrans': Components.I18nextTrans;
    'InputSignature': Components.InputSignature;
    'MyComponent': Components.MyComponent;
  }

  interface StencilIntrinsicElements {
    'app-home': Components.AppHomeAttributes;
    'app-profile': Components.AppProfileAttributes;
    'app-root': Components.AppRootAttributes;
    'i18next-provider': Components.I18nextProviderAttributes;
    'i18next-trans': Components.I18nextTransAttributes;
    'input-signature': Components.InputSignatureAttributes;
    'my-component': Components.MyComponentAttributes;
  }


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {}
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLI18nextProviderElement extends Components.I18nextProvider, HTMLStencilElement {}
  var HTMLI18nextProviderElement: {
    prototype: HTMLI18nextProviderElement;
    new (): HTMLI18nextProviderElement;
  };

  interface HTMLI18nextTransElement extends Components.I18nextTrans, HTMLStencilElement {}
  var HTMLI18nextTransElement: {
    prototype: HTMLI18nextTransElement;
    new (): HTMLI18nextTransElement;
  };

  interface HTMLInputSignatureElement extends Components.InputSignature, HTMLStencilElement {}
  var HTMLInputSignatureElement: {
    prototype: HTMLInputSignatureElement;
    new (): HTMLInputSignatureElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement
    'app-profile': HTMLAppProfileElement
    'app-root': HTMLAppRootElement
    'i18next-provider': HTMLI18nextProviderElement
    'i18next-trans': HTMLI18nextTransElement
    'input-signature': HTMLInputSignatureElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'app-profile': HTMLAppProfileElement;
    'app-root': HTMLAppRootElement;
    'i18next-provider': HTMLI18nextProviderElement;
    'i18next-trans': HTMLI18nextTransElement;
    'input-signature': HTMLInputSignatureElement;
    'my-component': HTMLMyComponentElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
